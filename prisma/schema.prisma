generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
  FRONT_END
  BACK_END 
  UI_UX_DESIGN
  CG_ARTIST
}

model User {
  id            Int    @id @default(autoincrement())
  name          String
  email         String @unique
  password      String

  role          Role
  rating        Int
  studyTimes    Int
  taskCompleted Int
  iconRating    String
  tasks         Task[]
  awards        UserAward[]
  leaderboard   Leaderboard[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}


model Task {
  id           Int    @id @default(autoincrement())
  name         String
  points       Int    @default(0)
  type         String
  difficulty   String

  user         User   @relation(fields: [userId], references: [id])
  userId       Int

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Reward {
  id           Int    @id @default(autoincrement())
  name         String
  icon         String
  description  String
  points       Int
  role         Role

  userAwards   UserAward[]
}
model UserAward {
  id           Int    @id @default(autoincrement())
  user         User   @relation(fields: [userId], references: [id])
  userId       Int

  reward       Reward @relation(fields: [rewardId], references: [id])
  rewardId     Int

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Leaderboard {
  id            Int    @id @default(autoincrement())

  user          User   @relation(fields: [userId], references: [id])
  userId        Int    

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}